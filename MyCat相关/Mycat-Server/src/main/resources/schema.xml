<?xml version="1.0"?>
<!DOCTYPE mycat:schema SYSTEM "schema.dtd">
<mycat:schema xmlns:mycat="http://io.mycat/">
	<!--物理库、物理表指实际存储在服务器上的实际表，逻辑库、逻辑表指一个虚拟的库或者表，其根本是物理节点-->
	
	<!--纵向分表、横向分表实例-->
	<!--schema标签用于配置逻辑库;
	    name指定逻辑库名称 ;
	    checkSQLschema用于检查SQL语句中的schema.table中的schema，并去除它，设置false，则不检查;
	    sqlMaxLimit指一次查询最多数量，以便提高性能; -->
	<schema name="mycat" checkSQLschema="false" sqlMaxLimit="100">
		<!--table标签用于配置逻辑表；
		    name指定逻辑表名称;
		    primaryKey指定主键；
		    rule用来配置分表逻辑；
		    dataNode指定数据库节点，指此表在哪些数据节点中出现，即各数据库节点都有此表；
		    type指定了逻辑表的类型，目前逻辑表只有全局表和普通版两种类型，type=global既为全局表，不写则为普通表；
		    autoIncrement指定是否自增；-->
		<table name="MYCAT_SEQUENCE" primaryKey="name" type="global" dataNode="nodeMycat" />
	</schema>
	<schema name="blog_user" checkSQLschema="false" sqlMaxLimit="100">
		<table name="user_info" primaryKey="id" type="global" dataNode="nodeUser" />
	</schema>
	<schema name="blog_category" checkSQLschema="false" sqlMaxLimit="100">
		<table name="category" primaryKey="id" type="global" dataNode="nodeCategory" />
		<table name="tag" primaryKey="id" type="global" dataNode="nodeCategory" />
		<table name="link" primaryKey="id" type="global" dataNode="nodeCategory" />
	</schema>
	<schema name="blog_article" checkSQLschema="false" sqlMaxLimit="100">
		<table name="article" primaryKey="user_id" dataNode="nodeArticle01,nodeArticle02" rule="mod-long" />
		<table name="article_tags" primaryKey="id" type="global" dataNode="nodeArticle01,nodeArticle02" />
	</schema>

	<!--单库分表-->
	<schema name="sub_person" checkSQLschema="false" sqlMaxLimit="100">
		<!--subTables指单库分表-->
		<table name="person" subTables="person_$1-6" primaryKey="id" rule="mod-long" dataNode="nodePerson" />
		<table name="tmonth" subTables="tmonth_20160$5-6" primaryKey="id" rule="sharding-by-month" dataNode="nodePerson" />
		<table name="tyear" subTables="tyear_201$6-7" primaryKey="id" rule="sharding-by-year" dataNode="nodePerson" />
	</schema>

	<!--读写分离-->
	<schema name="springjpa" checkSQLschema="false" sqlMaxLimit="100">
		<table name="user" dataNode="rwNode" primaryKey="id" autoIncrement="true" type="global"/>
	</schema>

	<!--纵向分表、横向分表实例-->
	<!--dataNode标签用于指定数据库节点；
	    name指定数据库节点名称；
	    dataHost指定数据库所在物理节点服务器；
	    database指定物理库;
	    dataNode在schema.xml中配置的顺序，也是dataNode列表的索引顺序，从0开始-->
	<dataNode name="nodeMycat" dataHost="vmHost01" database="mycat" />
	<dataNode name="nodeUser" dataHost="vmHost01" database="blog01" />
	<dataNode name="nodeCategory" dataHost="vmHost01" database="blog02" />
	<dataNode name="nodeArticle01" dataHost="vmHost01" database="blog_article01" />
	<dataNode name="nodeArticle02" dataHost="vmHost01" database="blog_article02" />

	<!--单库分表-->
	<dataNode name="nodePerson" dataHost="dataHost01" database="subtables" />

	<!--读写分离-->
	<dataNode name="rwNode" dataHost="vmHost02" database="springjpa" />

	<!--纵向分表、横向分表实例-->
	<!--dataHost用于配置物理库所在服务器，及其数据库连接信息；
	    name指定数据库服务器名称；
	    maxCon指定最大连接数；
	    minCon指定最小连接数;
	    balance指负载均衡类型：
	          0代表不开启读写分离，所有的读写任务都分配到writeHost上；
	          1代表开启读写分离，读取数据任务将分配到所有的readHost以及stand by writeHost负载均衡；
	          2代表所有的读写任务随机分配到writeHost，readHost上；
	          3所有读请求随机分配到writeHost所对应的readHost上执行，writeHost不承担读压力；
	     writeType负载均衡类型:
	     	  -1不自动切换；
	     	  1所有写操作发送到配置的第一个 writeHost，第一个挂了切到还生存的第二个writeHost，重新启动后以切换后为准，切换记录在配置文件中:dnindex.properties；
	     	  2 基于 MySQL 主仅同步的状态决定是否切换；
	     dbType指定后端连接的数据库类型，目前支持二进制的MySQL协议，还有其他使用JDBC连接的数据库；
	     dbDriver数据库连接驱动，目前有native和JDBC两种；
	     switchType ：  
	          -1不自动切换；
	          1自动切换；
	          2基于 MySQL 主仅同步的状态决定是否切换，心跳语句为 show slave status；
	          3基于 MySQL galary cluster 癿切换机制（适合集群）（1.4.1） 心跳语句为show status like ‘wsrep%’-->
	<dataHost name="vmHost01" maxCon="1000" minCon="10" balance="0"
			  writeType="0" dbType="mysql" dbDriver="native">
		<!--heartbeat用于配置心跳-->
		<heartbeat>select 1</heartbeat>
		<!--配置负责写入数据的服务器-->
		<writeHost host="hostM1" url="172.16.232.129:3306" user="root" password="root"/>
	</dataHost>

	<!--单库分表-->
	<dataHost name="dataHost01" maxCon="1000" minCon="10" balance="0"
			  writeType="0" dbType="mysql" dbDriver="native">
		<heartbeat>select 1</heartbeat>
		<writeHost host="hostM1" url="127.0.0.1:3306" user="root" password="root"/>
	</dataHost>

	<!--读写分离-->
	<dataHost name="vmHost02" maxCon="1000" minCon="10" balance="1"
			  writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
		<heartbeat>select 'x'</heartbeat>
		<writeHost host="hostM1" url="172.16.232.129:3306" user="root"
				   password="root">
			<!--配置负责读取数据的服务器-->
			<readHost host="hostS2" url="172.16.232.130:3306" user="root" password="root" />
		</writeHost>
	</dataHost>

</mycat:schema>
